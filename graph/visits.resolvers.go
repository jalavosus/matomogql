package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/jalavosus/matomogql/graph/loaders"
	"github.com/jalavosus/matomogql/graph/model"
)

// VisitorProfile is the resolver for the visitorProfile field.
func (r *visitResolver) VisitorProfile(ctx context.Context, obj *model.Visit) (*model.VisitorProfile, error) {
	return loaders.GetVisitorProfile(ctx, obj.IDSite, obj.VisitorID)
}

// DeviceInfo is the resolver for the deviceInfo field.
func (r *visitResolver) DeviceInfo(ctx context.Context, obj *model.Visit) (*model.DeviceInfo, error) {
	return &model.DeviceInfo{
		Type:                   obj.DeviceType,
		TypeIcon:               obj.DeviceTypeIcon,
		Brand:                  obj.DeviceBrand,
		Model:                  obj.DeviceModel,
		OperatingSystem:        obj.OperatingSystem,
		OperatingSystemVersion: obj.OperatingSystemVersion,
		OperatingSystemCode:    obj.OperatingSystemCode,
		OperatingSystemName:    obj.OperatingSystemName,
		OperatingSystemIcon:    obj.OperatingSystemIcon,
		Resolution:             obj.Resolution,
	}, nil
}

// BrowserInfo is the resolver for the browserInfo field.
func (r *visitResolver) BrowserInfo(ctx context.Context, obj *model.Visit) (*model.BrowserInfo, error) {
	return &model.BrowserInfo{
		Family:            obj.BrowserFamily,
		FamilyDescription: obj.BrowserFamilyDescription,
		Browser:           obj.Browser,
		Name:              obj.BrowserName,
		Icon:              obj.BrowserIcon,
		Code:              obj.BrowserCode,
		Version:           obj.BrowserVersion,
	}, nil
}

// LocationInfo is the resolver for the locationInfo field.
func (r *visitResolver) LocationInfo(ctx context.Context, obj *model.Visit) (*model.Location, error) {
	return &model.Location{
		Continent:     obj.Continent,
		ContinentCode: obj.ContinentCode,
		Country:       obj.Country,
		CountryCode:   obj.CountryCode,
		CountryFlag:   obj.CountryFlag,
		Region:        obj.Region,
		RegionCode:    obj.RegionCode,
		City:          obj.City,
		Location:      obj.Location,
		Latitude:      obj.Latitude,
		Longitude:     obj.Longitude,
	}, nil
}

// CampaignInfo is the resolver for the campaignInfo field.
func (r *visitResolver) CampaignInfo(ctx context.Context, obj *model.Visit) (*model.CampaignInfo, error) {
	return &model.CampaignInfo{
		ID:        obj.CampaignID,
		Content:   obj.CampaignContent,
		Keyword:   obj.CampaignKeyword,
		Medium:    obj.CampaignMedium,
		Name:      obj.CampaignName,
		Source:    obj.CampaignSource,
		Group:     obj.CampaignGroup,
		Placement: obj.CampaignPlacement,
	}, nil
}

// Referrer is the resolver for the referrer field.
func (r *visitActionDetailsResolver) Referrer(ctx context.Context, obj *model.VisitActionDetails) (*model.ReferrerInfo, error) {
	return &model.ReferrerInfo{
		Type:    obj.ReferrerType,
		Name:    obj.ReferrerName,
		Keyword: obj.ReferrerKeyword,
	}, nil
}

// Visit returns VisitResolver implementation.
func (r *Resolver) Visit() VisitResolver { return &visitResolver{r} }

// VisitActionDetails returns VisitActionDetailsResolver implementation.
func (r *Resolver) VisitActionDetails() VisitActionDetailsResolver {
	return &visitActionDetailsResolver{r}
}

type visitResolver struct{ *Resolver }
type visitActionDetailsResolver struct{ *Resolver }
